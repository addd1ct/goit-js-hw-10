{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector(\".datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nconst daysField = document.querySelector(\"[data-days]\");\nconst hoursField = document.querySelector(\"[data-hours]\");\nconst minutesField = document.querySelector(\"[data-minutes]\");\nconst secondsField = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction updateTimer(ms) {\n  const time = convertMs(ms);\n\n  daysField.textContent = addLeadingZero(time.days);\n  hoursField.textContent = addLeadingZero(time.hours);\n  minutesField.textContent = addLeadingZero(time.minutes);\n  secondsField.textContent = addLeadingZero(time.seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction startTimer() {\n  const endTime = userSelectedDate.getTime();\n\n  timerInterval = setInterval(() => {\n    const currentTime = new Date().getTime();\n    const timeRemaining = endTime - currentTime;\n\n    if (timeRemaining <= 0) {\n      clearInterval(timerInterval);\n      updateTimer(0);\n\n      iziToast.success({\n        title: \"Completed\",\n        message: \"The countdown has finished!\",\n      });\n\n      startButton.disabled = true;\n      input.disabled = false;\n      return;\n    }\n\n    updateTimer(timeRemaining);\n  }, 1000);\n\n  startButton.disabled = true;\n  input.disabled = true;\n}\n\nstartButton.addEventListener(\"click\", startTimer);\n\nstartButton.disabled = true;\n"],"names":["input","startButton","daysField","hoursField","minutesField","secondsField","userSelectedDate","timerInterval","options","selectedDates","flatpickr","addLeadingZero","value","updateTimer","ms","time","convertMs","days","hours","minutes","seconds","startTimer","endTime","currentTime","timeRemaining","iziToast"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,EAEAC,EAAU,mBAAoBF,CAAO,EAGrC,SAASG,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAYC,EAAI,CACvB,MAAMC,EAAOC,EAAUF,CAAE,EAEzBZ,EAAU,YAAcS,EAAeI,EAAK,IAAI,EAChDZ,EAAW,YAAcQ,EAAeI,EAAK,KAAK,EAClDX,EAAa,YAAcO,EAAeI,EAAK,OAAO,EACtDV,EAAa,YAAcM,EAAeI,EAAK,OAAO,CACxD,CAEA,SAASC,EAAUF,EAAI,CAMrB,MAAMG,EAAO,KAAK,MAAMH,EAAK,KAAG,EAC1BI,EAAQ,KAAK,MAAOJ,EAAK,MAAO,IAAI,EACpCK,EAAU,KAAK,MAAQL,EAAK,MAAO,KAAQ,GAAM,EACjDM,EAAU,KAAK,MAASN,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAa,CACpB,MAAMC,EAAUhB,EAAiB,UAEjCC,EAAgB,YAAY,IAAM,CAChC,MAAMgB,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAgBF,EAAUC,EAEhC,GAAIC,GAAiB,EAAG,CACtB,cAAcjB,CAAa,EAC3BM,EAAY,CAAC,EAEbY,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,6BACjB,CAAO,EAEDxB,EAAY,SAAW,GACvBD,EAAM,SAAW,GACjB,MACD,CAEDa,EAAYW,CAAa,CAC1B,EAAE,GAAI,EAEPvB,EAAY,SAAW,GACvBD,EAAM,SAAW,EACnB,CAEAC,EAAY,iBAAiB,QAASoB,CAAU,EAEhDpB,EAAY,SAAW"}